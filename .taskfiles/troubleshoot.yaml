version: '3'

tasks:

  default:
    silent: true
    internal: false
    cmds:
    - task: :helpers:validate
      vars:
        REQUIRED_TOOLS_LIST: kubectl flux jq yq
    - task: :helpers:print-current-context
    requires:
      vars: [ENVIRONMENT]

  gpu-collect:
    silent: false
    deps: [default]
    desc: Gather common nvidia gpu resources in your cluster. Override kommander namespace with task ts:gpu-collect -- -n gpu-operator
    cmds:
    - kubectl get nodes -o='custom-columns=NodeName:.metadata.name,TaintKey:.spec.taints[*].key,TaintValue:.spec.taints[*].value,TaintEffect:.spec.taints[*].effect'
    - kubectl get cm time-slicing-config {{.CLI_ARGS | default "-n kommander"}} --ignore-not-found
    - kubectl get clusterpolicies.nvidia.co/cluster-policy {{.CLI_ARGS | default "-n kommander"}} -o jsonpath='{.spec.devicePlugin.config}}' && echo
    - kubectl get pod {{.CLI_ARGS | default "-n kommander"}}
    - kubectl get node -o json -l nvidia.com/gpu.present=true | jq '.items[].metadata.labels'
    - kubectl get pod {{.CLI_ARGS | default "-n kommander"}} -o name -l app=nvidia-driver-daemonset | xargs -I {} kubectl exec {{.CLI_ARGS | default "-n kommander"}} -i {} -c nvidia-driver-ctr -- nvidia-smi
    - kubectl top nodes -l nvidia.com/gpu.present=true --show-capacity
    #- kubectl get events {{.CLI_ARGS | default "-n kommander"}} --sort-by='.lastTimestamp'

  ingress-collect:
    silent: false
    deps: [default]
    desc: Gather common ingress resources in your cluster
    cmds:
    - task: :kubectl:ingresses
    - task: :kubectl:certificates
    - task: :kubectl:services
    - task: :kubectl:endpoints

  flux-collect:
    silent: false
    deps: [default]
    desc: Gather common flux resources in your cluster
    cmds:
    - task: :kubectl:nodes
    - task: :kubectl:kustomizations
    - task: :kubectl:helmreleases
    - task: :kubectl:helmrepositories
    - task: :kubectl:gitrepositories
    - task: :kubectl:certificates
    - task: :kubectl:ingresses
    - task: :kubectl:services
    - task: :kubectl:pods
    - task: :flux:summary

  cert-manager-collect:
    silent: false
    deps: [default]
    desc: Gather resources managed by cert-manager. If using NKP, you can override with task ts:cert-manager-collect -- -n kommander
    cmds:
    - kubectl get certificates.cert-manager.io {{.CLI_ARGS | default "-A"}}
    - kubectl get certificaterequests.cert-manager.io {{.CLI_ARGS | default "-A"}}
    - kubectl get clusterissuers.cert-manager.io
    - kubectl get orders.acme.cert-manager.io -A
    - kubectl get challenges.acme.cert-manager.io -A
    - kubectl get secrets {{.CLI_ARGS | default "-A"}} | grep -i tls
    - flux events --for Kustomization/cert-manager {{.CLI_ARGS | default "-n kommander"}}
    - flux events --for Kustomization/cert-manager-resource-configs {{.CLI_ARGS | default "-n kommander"}}
    - flux events --for HelmRelease/cert-manager {{.CLI_ARGS | default "-n kommander"}}
    - flux logs --kind=Kustomization --name=cert-manager --tail 10 {{.CLI_ARGS | default "-n kommander"}}
    - flux logs --kind=HelmRelease --name=cert-manager --tail 10 {{.CLI_ARGS | default "-n kommander"}}

  lets-encrypt-aws-collect:
    silent: false
    deps: [default]
    desc: Gather resources managed by lets-encrypt
    cmds:
    - kubectl get secret letsencrypt-aws-secret -n cert-manager -o yaml | yq .data
    - kubectl get secret cluster-secrets -n {{.CLI_ARGS | default "-n kommander"}} -o yaml | grep -i aws
    - kubectl get clusterissuer letsencrypt-issuer -o yaml | yq .spec
    - kubectl get clusterissuer letsencrypt-issuer -o yaml | yq .status
    - kubectl get helmrelease cert-manager -n {{.CLI_ARGS | default "-n kommander"}} -o yaml | yq .spec
    - kubectl get helmrelease cert-manager -n {{.CLI_ARGS | default "-n kommander"}} -o yaml | yq .status
    - kubectl get kustomization cert-manager -n {{.CLI_ARGS | default "-n kommander"}} -o yaml | yq .spec
    - kubectl get kustomization cert-manager -n {{.CLI_ARGS | default "-n kommander"}} -o yaml | yq .status.conditions

  istio-collect:
    silent: false
    deps: [default]
    desc: Gather resources managed by istio
    cmds:
    - kubectl get virtualservice.networking.istio.io {{.CLI_ARGS | default "-A"}}
    - kubectl get certificate.networking.internal.knative.dev -n istio-system

  kserve-collect:
    silent: false
    deps: [default]
    desc: Gather resources managed by kserve and knative
    cmds:
    - kubectl get virtualservice.networking.istio.io {{.CLI_ARGS | default "-A"}}
    - kubectl get configuration.serving.knative.dev {{.CLI_ARGS | default "-A"}}
    - kubectl get route.serving.knative.dev {{.CLI_ARGS | default "-A"}}
    - kubectl get service.serving.knative.dev {{.CLI_ARGS | default "-A"}}
    - kubectl get inferenceservice.serving.kserve.io {{.CLI_ARGS | default "-A"}}
    - kubectl get ingress.networking.internal.knative.dev {{.CLI_ARGS | default "-A"}}
    - kubectl get gateway.networking.istio.io {{.CLI_ARGS | default "-A"}}
    - kubectl get peerauthentication.security.istio.io {{.CLI_ARGS | default "-A"}}

  nai-collect:
    silent: false
    deps: [default]
    desc: Gather resources managed by kserve and knative
    cmds:
    - kubectl get model.iep.nai.nutanix.com -n nai-admin
    - task ts:istio-collect
    - task ts:ingress-collect -- -n nai-admin
    - task ts:kserve-collect -- -n nai-admin
    - task ts:kserve-collect -- -n nai-admin
