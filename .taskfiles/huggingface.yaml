version: '3'

env:
  NFS_SERVER: ${NFS_SERVER_FQDN}
  MODEL_NAME: '{{ default "meta-llama/Meta-Llama-3-8B" .MODEL_NAME}}'
  NFS_SHARE: '{{ default "llm-model-store" .NFS_SHARE}}'
  MODEL_DIR: '/mnt/{{.NFS_SERVER}}/{{.NFS_SHARE}}'

tasks:

  print-vars:
    silent: false
    cmds:
      - 'echo "NFS_SERVER: {{.NFS_SERVER}}"'
      - 'echo "NFS_SHARE: {{.NFS_SHARE}}"'
      - 'echo "MODEL_DIR: {{.MODEL_DIR}}"'
      - 'echo "MODEL_NAME: {{.MODEL_NAME}}"'

  default:
    silent: true
    internal: false
    cmds:
    - task: :helpers:validate
      vars:
        REQUIRED_TOOLS_LIST: huggingface-cli showmount mount
    - task: :helpers:print-current-context
    requires:
      vars: [ENVIRONMENT]

  install-hf-cli:
    silent: false
    desc: Install Huggingface CLI
    cmds:
    - pip install -q huggingface-cli
    status:
    - command -v huggingface-cli

  login:
    silent: false
    deps: [default]
    desc: Login to Huggingface via CLI
    cmds:
    - huggingface-cli login --token {{.HUGGINGFACE_TOKEN}}
    requires:
      vars: [HUGGINGFACE_TOKEN]

  mount-nfs-share:
    silent: false
    deps: [default]
    platforms: [linux]
    desc: Mount NFS Share
    cmds:
    - test -d {{.MODEL_DIR}} || sudo mkdir -p {{.MODEL_DIR}}
    - sudo mount -t nfs -w -v {{.NFS_SERVER}}:/{{.NFS_SHARE}} {{.MODEL_DIR}}
    precondition:
    - sh: showmount -e {{.NFS_SERVER}} | awk '{print $1}' | grep -i llm-model-store
      msg: "NFS Share ({{.NFS_SHARE}}) not found on NFS Server ({{.NFS_SERVER}})"
    requires:
      vars: [NFS_SERVER, NFS_SHARE, MODEL_DIR]
    status:
    - mount | grep {{.MODEL_DIR}}

  download-model:
    silent: false
    deps: [mount-nfs-share, install-hf-cli]
    desc: Download Huggingface Model via CLI
    cmds:
    - test -d {{.MODEL_DIR}} || sudo mkdir -p {{.MODEL_DIR}}/{{.MODEL_NAME}}
    - |
      export HF_HUB_CACHE={{.MODEL_DIR}} && \
      huggingface-cli download {{.MODEL_NAME}} \
        --cache-dir {{.MODEL_DIR}} \
        --local-dir {{.MODEL_DIR}}/{{.MODEL_NAME}} \
        --token {{.HUGGINGFACE_TOKEN}} \
        --exclude "original/*"
    precondition:
    - sh: mount | grep {{.MODEL_DIR}}
      msg: "NFS Share ({{.MODEL_DIR}}) not mounted"
    requires:
      vars: [HUGGINGFACE_TOKEN]



