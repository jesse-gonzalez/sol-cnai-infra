version: '3'

tasks:

  default:
    silent: true
    internal: false
    cmds:
    - task: :helpers:validate
      vars:
        REQUIRED_TOOLS_LIST: kubectl flux git helm jq base64
    - task: :helpers:print-current-context
    requires:
      vars: [ENVIRONMENT]

  summary:
    silent: true
    deps: [default]
    desc: Use to troubleshoot issues with flux resources.
    cmds:
    - flux get all -n {{.CLI_ARGS | default "kommander"}}
    - flux stats -n {{.CLI_ARGS | default "kommander"}}

  watch:
    silent: true
    deps: [default]
    desc: Watch important flux resouces via kubectl
    cmds:
    - watch -n 1 "kubectl get gitrepo,helmrepo,hr,ks -n {{.CLI_ARGS | default "kommander"}} && echo && flux stats -n {{.CLI_ARGS | default "kommander"}}"
    interactive: true

  tree:
    silent: true
    deps: [default]
    desc: Show list of resources reconciled by a Flux object using the flux tree command.
    cmds:
    - flux tree kustomization {{.CLI_ARGS | default "kommander"}}

  suspend-all:
    silent: false
    prompt: "Are you sure you wish to SUSPEND all resources managed by flux?"
    deps: [default]
    desc: Suspends all flux resources from being reconciled
    cmds:
    - kubectl get kustomization -n {{.CLI_ARGS | default "kommander"}} -o name | cut -d/ -f2 | xargs flux suspend kustomization -n {{.CLI_ARGS | default "kommander"}}
    - kubectl get helmrelease -n {{.CLI_ARGS | default "kommander"}} -o name | cut -d/ -f2 | xargs flux suspend helmrelease -n {{.CLI_ARGS | default "kommander"}}
    requires:
      vars: [K8S_CLUSTER_NAME]

  resume-all:
    silent: false
    prompt: "Are you sure you wish to RESUME all resources managed by flux?"
    deps: [default]
    desc: Resumes all flux resources from being reconciled
    cmds:
    - kubectl get kustomization -n {{.CLI_ARGS | default "kommander"}} -o name | cut -d/ -f2 | xargs flux resume kustomization -n {{.CLI_ARGS | default "kommander"}}
    - kubectl get helmrelease -n {{.CLI_ARGS | default "kommander"}} -o name | cut -d/ -f2 | xargs flux resume helmrelease -n {{.CLI_ARGS | default "kommander"}}
    requires:
      vars: [K8S_CLUSTER_NAME]

  get-cluster-configs:
    silent: true
    deps: [default]
    desc: Get generated cluster-configs ConfigMap from kommander namespace
    cmds:
    - kubectl get cm -n {{.CLI_ARGS | default "kommander"}} cluster-configs -o json | jq .data

  get-cluster-secrets:
    silent: true
    deps: [default]
    desc: Get generated cluster-secrets Secret from kommander namespace
    cmds:
    - kubectl get secret -n {{.CLI_ARGS | default "kommander"}} cluster-secrets -o json | jq .data

  trace-namespace:
    aliases: [tns]
    silent: false
    deps: [default]
    desc: Trace flux resources for given namespace
    vars:
      TARGET_NAMESPACE:
        sh: task bootstrap:gum -- choose --header "Which Namespace would you like to trace using flux?" $(kubectl get ns -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}')
    cmds:
    - flux trace namespace {{.TARGET_NAMESPACE}}
    interactive: true

  trace-kustomize:
    aliases: [tks]
    silent: false
    deps: [default]
    desc: Trace flux resources for given kustomization
    vars:
      TARGET_KUSTOMIZATION:
        sh: task bootstrap:gum -- choose --header "Which Namespace would you like to trace using flux?" $(kubectl get ks -n {{.CLI_ARGS | default "kommander"}} -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}')
    cmds:
    - flux trace kustomization {{.TARGET_KUSTOMIZATION}}
    interactive: true

  trace-helmrelease:
    aliases: [thr]
    silent: false
    deps: [default]
    desc: Trace flux resources for given kustomization
    vars:
      TARGET_HELMRELEASE:
        sh: task bootstrap:gum -- choose --header "Which Namespace would you like to trace using flux?" $(kubectl get ks -n {{.CLI_ARGS | default "kommander"}} -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}')
    cmds:
    - flux trace helmrelease {{.TARGET_HELMRELEASE}}
    interactive: true

